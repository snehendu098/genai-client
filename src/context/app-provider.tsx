"use client";

import React, { createContext, useContext, useState } from "react";

const AppContext = createContext<any>(undefined);

const data = {
  gaps: [1, 6, 9],
  anomalies: [2, 7],
  duplicates: [4, 5, 10, 11],
  data: [
    [
      "New York",
      "Sales",
      "Revenue",
      "USD",
      "2024",
      1431,
      2341,
      1567,
      1987,
      2198,
      2456,
      2789,
      3012,
      3211,
      3412,
      3613,
      3814,
    ],
    [
      "Chicago",
      "Operations",
      "Profit",
      "GBP",
      "2022",
      null,
      1200,
      null,
      2300,
      null,
      3300,
      null,
      4700,
      5100,
      null,
      5700,
      null,
    ],
    [
      "Phoenix",
      "HR",
      "Assets",
      "CNY",
      "2020",
      100,
      200,
      300,
      500,
      -1000,
      700,
      800,
      900,
      1000,
      1100,
      1200,
      1300,
    ],
    [
      "Los Angeles",
      "Marketing",
      "Expenses",
      "EUR",
      "2023",
      1500,
      2600,
      3200,
      3900,
      4700,
      5300,
      6000,
      7200,
      8100,
      8800,
      9600,
      10400,
    ],
    [
      "Los Angeles",
      "Marketing",
      "Expenses",
      "EUR",
      "2023",
      1500,
      2600,
      3200,
      3900,
      4700,
      5300,
      6000,
      7200,
      8100,
      8800,
      9600,
      10400,
    ],
    [
      "Seattle",
      "Finance",
      "Revenue",
      "CAD",
      "2023",
      1300,
      2100,
      3000,
      4000,
      5000,
      6200,
      7300,
      8400,
      9500,
      10500,
      11300,
      12400,
    ],
    [
      "Houston",
      "Sales",
      "Loss",
      "JPY",
      "2021",
      200,
      null,
      600,
      null,
      1000,
      1200,
      null,
      1600,
      1800,
      null,
      2400,
      2600,
    ],
    [
      "Dallas",
      "Operations",
      "Profit",
      "AUD",
      "2022",
      500,
      1000,
      1500,
      50000,
      2500,
      3000,
      3500,
      4000,
      4500,
      5000,
      5500,
      6500,
    ],
    [
      "Miami",
      "Sales",
      "Revenue",
      "USD",
      "2024",
      1400,
      2300,
      1500,
      1950,
      2200,
      2400,
      2700,
      3050,
      3200,
      3400,
      3550,
      3700,
    ],
    [
      "Atlanta",
      "HR",
      "Expenses",
      "INR",
      "2020",
      100,
      null,
      350,
      500,
      null,
      800,
      900,
      null,
      1200,
      null,
      1500,
      null,
    ],
    [
      "Phoenix",
      "HR",
      "Assets",
      "CNY",
      "2020",
      120,
      220,
      320,
      520,
      620,
      720,
      820,
      920,
      1020,
      1120,
      1220,
      1320,
    ],
    [
      "Phoenix",
      "HR",
      "Assets",
      "CNY",
      "2020",
      120,
      220,
      320,
      520,
      620,
      720,
      820,
      920,
      1020,
      1120,
      1220,
      1320,
    ],
  ],
};

interface AnalyticsData {
  [type: number]: number;
}

export interface IExcelProcessingData {
  gaps: number[];
  anomalies: number[];
  duplicates: number[];
  data: any[][];
}

export const AppWrapper = ({ children }: { children: React.ReactNode }) => {
  const [page, setPage] = useState<number>(0);
  const [handleDataContext, setHandleDataContext] = useState<AnalyticsData>();
  const [excelProcessedData, setExcelProcessedData] =
    useState<IExcelProcessingData>(data);

  return (
    <AppContext.Provider
      value={{
        page,
        setPage,
        handleDataContext,
        setHandleDataContext,
        excelProcessedData,
        setExcelProcessedData,
      }}
    >
      {children}
    </AppContext.Provider>
  );
};

export function useAppContext() {
  return useContext(AppContext);
}
